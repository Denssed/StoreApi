// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreApi.Data;

#nullable disable

namespace StoreApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StoreApi.Entities.Batch", b =>
                {
                    b.Property<int>("IdBatch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBatch"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("IdBatch");

                    b.HasIndex("IdProduct");

                    b.ToTable("Batches");

                    b.HasData(
                        new
                        {
                            IdBatch = 1,
                            Active = true,
                            EntryDate = new DateTime(2025, 2, 1, 21, 21, 50, 575, DateTimeKind.Local).AddTicks(1650),
                            IdProduct = 1,
                            Price = 1000.00m,
                            Quantity = 10
                        },
                        new
                        {
                            IdBatch = 2,
                            Active = true,
                            EntryDate = new DateTime(2025, 2, 1, 21, 21, 50, 575, DateTimeKind.Local).AddTicks(1668),
                            IdProduct = 2,
                            Price = 800.00m,
                            Quantity = 20
                        },
                        new
                        {
                            IdBatch = 3,
                            Active = true,
                            EntryDate = new DateTime(2025, 2, 1, 21, 21, 50, 575, DateTimeKind.Local).AddTicks(1670),
                            IdProduct = 3,
                            Price = 200.00m,
                            Quantity = 30
                        },
                        new
                        {
                            IdBatch = 4,
                            Active = true,
                            EntryDate = new DateTime(2025, 2, 1, 21, 21, 50, 575, DateTimeKind.Local).AddTicks(1671),
                            IdProduct = 4,
                            Price = 400.00m,
                            Quantity = 15
                        },
                        new
                        {
                            IdBatch = 5,
                            Active = true,
                            EntryDate = new DateTime(2025, 2, 1, 21, 21, 50, 575, DateTimeKind.Local).AddTicks(1673),
                            IdProduct = 5,
                            Price = 150.00m,
                            Quantity = 25
                        },
                        new
                        {
                            IdBatch = 6,
                            Active = true,
                            EntryDate = new DateTime(2025, 2, 1, 21, 21, 50, 575, DateTimeKind.Local).AddTicks(1674),
                            IdProduct = 6,
                            Price = 50.00m,
                            Quantity = 50
                        });
                });

            modelBuilder.Entity("StoreApi.Entities.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduct"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("IdProduct");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            IdProduct = 1,
                            Active = true,
                            Description = "High performance laptop",
                            Name = "Laptop"
                        },
                        new
                        {
                            IdProduct = 2,
                            Active = true,
                            Description = "Latest model smartphone",
                            Name = "Smartphone"
                        },
                        new
                        {
                            IdProduct = 3,
                            Active = true,
                            Description = "Noise-cancelling headphones",
                            Name = "Headphones"
                        },
                        new
                        {
                            IdProduct = 4,
                            Active = true,
                            Description = "4K Ultra HD monitor",
                            Name = "Monitor"
                        },
                        new
                        {
                            IdProduct = 5,
                            Active = true,
                            Description = "Mechanical keyboard",
                            Name = "Keyboard"
                        },
                        new
                        {
                            IdProduct = 6,
                            Active = true,
                            Description = "Wireless mouse",
                            Name = "Mouse"
                        });
                });

            modelBuilder.Entity("StoreApi.Entities.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            IdUser = 1,
                            Email = "admin@example.com",
                            FechaCreacion = new DateTime(2025, 2, 1, 21, 21, 50, 705, DateTimeKind.Local).AddTicks(1897),
                            Name = "Admin User",
                            PasswordHash = "$2a$11$WyoJRoXjzILZgVrQ2OSrjOfR3zht32cf9q5ICfWlM/7E/StXosuo6"
                        },
                        new
                        {
                            IdUser = 2,
                            Email = "user@example.com",
                            FechaCreacion = new DateTime(2025, 2, 1, 21, 21, 50, 836, DateTimeKind.Local).AddTicks(79),
                            Name = "Regular User",
                            PasswordHash = "$2a$11$KPB3OnNZ5nlN13FIl3.deuxuLFoGKTYGTnbJt3REsjI76Ayfdi5ny"
                        });
                });

            modelBuilder.Entity("StoreApi.Entities.Batch", b =>
                {
                    b.HasOne("StoreApi.Entities.Product", "Product")
                        .WithMany("Batch")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StoreApi.Entities.Product", b =>
                {
                    b.Navigation("Batch");
                });
#pragma warning restore 612, 618
        }
    }
}
